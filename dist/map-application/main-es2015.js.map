{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/map-library/fesm2015/map-library.js","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgY;AACrT;AACzC;;AAElC;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,wEAAkB,EAAE,gFAAgF;AAC9H,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,mDAAG;AACtB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,yDAAS,WAAW,EAAE,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE;AACvD;AACA;AACA;AACA,wBAAwB,+CAAO;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD,eAAe,aAAa;AAC5B,wCAAwC,gBAAgB;AACxD,wCAAwC,YAAY;AACpD;AACA;AACA,mBAAmB,8CAAM;AACzB,sBAAsB,+CAAO;AAC7B;AACA;AACA;AACA;AACA,aAAa;A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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, EventEmitter, ɵɵdirectiveInject, ElementRef, ɵɵdefineComponent, ɵɵlistener, ɵɵresolveWindow, ɵɵNgOnChangesFeature, ɵɵelementStart, ɵɵelement, ɵɵelementEnd, ɵɵadvance, ɵɵclassMapInterpolate1, ɵɵclassMap, Component, Output, HostListener, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { map, tileLayer, Control, marker, Marker, DivIcon } from 'leaflet';\nimport 'leaflet-control-geocoder';\n\nclass MapLibraryService {\n    constructor() {\n    }\n}\nMapLibraryService.ɵfac = function MapLibraryService_Factory(t) { return new (t || MapLibraryService)(); };\nMapLibraryService.ɵprov = ɵɵdefineInjectable({ token: MapLibraryService, factory: MapLibraryService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MapLibraryService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nvar CONST;\n(function (CONST) {\n    CONST[CONST[\"ZOOM_MAX\"] = 18] = \"ZOOM_MAX\";\n    CONST[CONST[\"ZOOM_MIN\"] = 2] = \"ZOOM_MIN\";\n    CONST[CONST[\"LAT_MAX\"] = 85] = \"LAT_MAX\";\n})(CONST || (CONST = {}));\nclass MapLibraryComponent {\n    constructor(elem) {\n        this.elem = elem;\n        // input values\n        this.mapLat = 45;\n        this.mapLng = 5;\n        this.mapZoom = 5;\n        this.onchange = new EventEmitter();\n        this.onselect = new EventEmitter();\n        this.searchInputFocused = false;\n        this.moveMode = true;\n        this.handleIcon = \"move\";\n        this.handleMenuIcon = \"zoom\";\n        this.displayMenu = \"\";\n        this.choiseMenu = 1;\n        this.navigate = false;\n        this.navigateId = 0;\n        // display markers\n        this.mapMarkers = [];\n    }\n    ngAfterViewInit() {\n        // init map\n        this.initMap();\n        this.initInput();\n        this.setMoveShift();\n        // init display input request\n        this.setSearch(this.search);\n        this.setMarker(this.marker);\n        // send init event\n        setTimeout(() => {\n            this.sendModifications(\"\");\n        }, 2000);\n    }\n    initMap() {\n        // init map\n        this.map = map(\"map\", {\n            attributionControl: false,\n            zoomControl: false,\n            center: [this.mapLat, this.mapLng],\n            zoom: this.mapZoom,\n        });\n        // display map\n        tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\").addTo(this.map);\n        // disable keyboard\n        this.map.keyboard.disable();\n        // add search box\n        this.geocoder = Control.geocoder({\n            position: \"topleft\",\n            collapsed: false,\n            placeholder: \"Recherche...\",\n            defaultMarkGeocode: true,\n        }).addTo(this.map);\n    }\n    setSearch(search) {\n        if (this.search) {\n            // load searching\n            this.geocoder.setQuery(search)._geocode();\n            // search the first element\n            setTimeout(() => {\n                if (this.geocoder._results && this.geocoder._results.length) {\n                    this.geocoder._geocodeResultSelected(this.geocoder._results[0]);\n                    this.geocoder._clearResults();\n                }\n            }, 2000);\n        }\n    }\n    setMarker(marker$1) {\n        this.cleanMarkers();\n        let i = 0;\n        marker$1.forEach(element => {\n            if (\"lat\" in element && \"lng\" in element) {\n                element.id = i;\n                if (!element.text && element.img) {\n                    this.mapMarkers[i] = this.generateImageMarker(element);\n                }\n                else if (!element.text) {\n                    this.mapMarkers[i] = marker([element.lat, element.lng]);\n                }\n                else {\n                    this.mapMarkers[i] = this.generateIconMarker(element);\n                }\n                this.mapMarkers[i].addTo(this.map);\n                if (this.navigate && this.mapLat == element.lat && this.mapLng == element.lng) {\n                    this.navigateId = i;\n                    this.elem.nativeElement.querySelector(\"#marker_\" + this.navigateId).style.background = \"orange\";\n                }\n                i++;\n            }\n        });\n    }\n    // remove all markers to display news\n    cleanMarkers() {\n        for (let i = 0; i < this.mapMarkers.length; i++) {\n            this.map.removeLayer(this.mapMarkers[i]);\n        }\n    }\n    // generate Marker\n    generateIconMarker(element) {\n        // set html form\n        let html = `\n      <div class=\"marker\" id=\"marker_${element.id}\">\n        <div>${element.text}</div>\n        ` + (element.content ? `<span>${element.content}</span>` : ``) +\n            (element.img ? `<img src=\"${element.img}\"/>` : ``) + `\n      </div>`;\n        // return leaflet marker\n        return new Marker([element.lat, element.lng], {\n            icon: new DivIcon({\n                className: '',\n                iconSize: [100, 70],\n                iconAnchor: [60, element.img ? 40 : 10],\n                html,\n            })\n        });\n    }\n    // generate image Marker\n    generateImageMarker(element) {\n        // set html form\n        let html = `<img id=\"marker_${element.id}\" style=\"width:80px;\" src=\"${element.img}\"/>`;\n        // return leaflet marker\n        return new Marker([element.lat, element.lng], {\n            icon: new DivIcon({\n                className: '',\n                iconSize: [80, 70],\n                iconAnchor: [45, element.img ? 40 : 10],\n                html,\n            })\n        });\n    }\n    /*************** components attributes events *************/\n    ngOnChanges(changes) {\n        if (this.map) {\n            switch (Object.keys(changes)[0]) {\n                case \"mapZoom\":\n                case \"mapLat\":\n                case \"mapLng\":\n                    this.map.setView([this.mapLat, this.mapLng], this.mapZoom);\n                    this.setMoveShift();\n                    break;\n                case \"marker\":\n                    this.setMarker(this.marker);\n                    break;\n                case \"search\":\n                    this.setSearch(this.search);\n                    break;\n            }\n        }\n    }\n    /*************** keyboard event detect and functions *************/\n    keyEvent(event) {\n        if (this.focused) {\n            if (this.displayMenu != \"\") {\n                this.handlingMenu(event.key);\n            }\n            else if (this.navigate) {\n                this.handlingNavigation(event.key);\n            }\n            else {\n                this.handlingMap(event.key);\n                // send change to parent application\n                this.sendModifications(event.key);\n            }\n        }\n    }\n    handlingNavigation(key) {\n        switch (key) {\n            case \"ArrowUp\":\n                this.navigateMarker(1, 0);\n                break;\n            case \"ArrowDown\":\n                this.navigateMarker(-1, 0);\n                break;\n            case \"ArrowRight\":\n                this.navigateMarker(0, 1);\n                break;\n            case \"ArrowLeft\":\n                this.navigateMarker(0, -1);\n                break;\n            case \"Enter\":\n                // send change to parent application\n                if (this.marker[this.navigateId])\n                    this.sendSelectEvent(this.marker[this.navigateId]);\n                break;\n            case \"Escape\":\n                this.openMenu();\n                break;\n        }\n    }\n    handlingMenu(key) {\n        switch (key) {\n            case \"ArrowRight\":\n                this.choiseMenu++;\n                if (this.choiseMenu > 4) {\n                    this.choiseMenu = 0;\n                }\n                break;\n            case \"ArrowLeft\":\n                this.choiseMenu--;\n                if (this.choiseMenu < 0) {\n                    this.choiseMenu = 4;\n                }\n                break;\n            case \"Enter\":\n                // reset navigation mode\n                this.navigate = false;\n                if (this.choiseMenu == 0) {\n                    this.setFocus();\n                }\n                else {\n                    this.setFocusOut();\n                }\n                if (this.choiseMenu == 1) {\n                    this.handleIcon = \"move\";\n                    this.moveMode = true;\n                }\n                else if (this.choiseMenu == 2) {\n                    this.handleIcon = \"zoom\";\n                    this.moveMode = false;\n                }\n                else if (this.choiseMenu == 3) {\n                    this.setNavigationMode();\n                }\n                else if (this.choiseMenu == 4) {\n                    alert(\"exit\");\n                }\n                this.closeMenu();\n                break;\n            case \"Escape\":\n                this.closeMenu();\n                break;\n        }\n    }\n    handlingMap(key) {\n        switch (key) {\n            case \"ArrowUp\":\n                if (this.moveMode) {\n                    if (this.map.getCenter().lat < CONST.LAT_MAX) {\n                        this.moveMap(1, 0);\n                    }\n                }\n                else {\n                    if (this.mapZoom < CONST.ZOOM_MAX) {\n                        this.zoomMap(1);\n                        this.moveShift /= 2;\n                    }\n                }\n                break;\n            case \"ArrowDown\":\n                if (this.moveMode) {\n                    if (this.map.getCenter().lat > -CONST.LAT_MAX) {\n                        this.moveMap(-1, 0);\n                    }\n                }\n                else {\n                    if (this.mapZoom > CONST.ZOOM_MIN) {\n                        this.zoomMap(-1);\n                        this.moveShift *= 2;\n                    }\n                }\n                break;\n            case \"ArrowRight\":\n                if (this.moveMode) {\n                    this.moveMap(0, 1);\n                }\n                else {\n                }\n                break;\n            case \"ArrowLeft\":\n                if (this.moveMode) {\n                    this.moveMap(0, -1);\n                }\n                else {\n                }\n                break;\n            case \"Enter\":\n                this.changeMode();\n                break;\n            case \"Escape\":\n                this.openMenu();\n                break;\n        }\n    }\n    // display move or zoom icon when press\n    changeMode() {\n        this.moveMode = !this.moveMode;\n        if (this.moveMode) {\n            this.handleIcon = \"move\";\n            this.choiseMenu = 1;\n        }\n        else {\n            this.handleIcon = \"zoom\";\n            this.choiseMenu = 2;\n        }\n    }\n    sendModifications(key) {\n        // calcul map outline by container size and pixel progection\n        let mapSize = this.map.getSize();\n        let centerPixel = this.map.project([this.mapLat, this.mapLng], this.mapZoom);\n        let topLeft = this.map.unproject([centerPixel.x - mapSize.x / 2, centerPixel.y - mapSize.y / 2], this.mapZoom);\n        let bottomRight = this.map.unproject([centerPixel.x + mapSize.x / 2, centerPixel.y + mapSize.y / 2], this.mapZoom);\n        // send coordinates results\n        this.onchange.emit({\n            key: key,\n            zoom: this.mapZoom,\n            lat: this.mapLat,\n            lng: this.mapLng,\n            view: {\n                top: topLeft.lat,\n                left: topLeft.lng,\n                bottom: bottomRight.lat,\n                right: bottomRight.lng\n            }\n        });\n    }\n    sendSelectEvent(selected) {\n        this.onselect.emit(selected);\n    }\n    /*************** escape app functions *************/\n    openMenu() {\n        this.displayMenu = \"show-menu\";\n    }\n    closeMenu() {\n        this.displayMenu = \"\";\n    }\n    // show escape message\n    selectMenu(key) {\n        if (key == \"Escape\") {\n            this.closeMenu();\n        }\n        else {\n            //this.validEscape = false;\n        }\n    }\n    /*************** navigate between markers *************/\n    setNavigationMode() {\n        this.navigate = true;\n        this.handleIcon = \"navigation\";\n        this.navigateMarker(0, 0);\n        // define menu to move\n        this.moveMode = false;\n        this.handleMenuIcon = \"move\";\n    }\n    navigateMarker(lat, lng) {\n        if (!this.marker.length) {\n            return;\n        }\n        if (this.marker.length == 1) {\n            this.navigateId = 0;\n            this.elem.nativeElement.querySelector(\"#marker_\" + this.navigateId).style.background = \"orange\";\n            return;\n        }\n        if (this.navigateId > this.marker.length) {\n            this.navigateId = 0;\n        }\n        if (lat != 0 || lng != 0) {\n            // reset previous\n            this.elem.nativeElement.querySelector(\"#marker_\" + this.marker[this.navigateId].id).style.background = \"white\";\n        }\n        // display new\n        if (lng > 0) {\n            this.findFirstRightElement();\n        }\n        else if (lng < 0) {\n            this.findFirstLeftElement();\n        }\n        else if (lat > 0) {\n            this.findFirstTopElement();\n        }\n        else if (lat < 0) {\n            this.findFirstBottomElement();\n        }\n        else {\n            this.navigateId = 0;\n        }\n        let el = this.marker[this.navigateId];\n        this.mapLat = el.lat;\n        this.mapLng = el.lng;\n        this.moveMap(0, 0);\n        this.sendModifications(\"\");\n    }\n    calcAngle(adjacent, opposite) {\n        return Math.atan(Math.abs(opposite) / Math.abs(adjacent)) * (180 / Math.PI);\n    }\n    calcHyp(adjacent, opposite) {\n        return Math.sqrt(Math.pow(adjacent, 2) + Math.pow(opposite, 2));\n        ;\n    }\n    findFirstLeftElement() {\n        let selected = this.marker[this.navigateId];\n        let newSelect = null;\n        this.marker.forEach(element => {\n            if (element != selected && element.lng < selected.lng && (newSelect == null || (element.lng > newSelect.lng || newSelect.lng > selected.lng))) {\n                let angle = this.calcAngle(element.lng - selected.lng, element.lat - selected.lat);\n                //console.log(element.text+\" \"+angle)\n                if (angle < 45) {\n                    newSelect = element;\n                }\n            }\n        });\n        if (newSelect == null || newSelect.lng >= selected.lng) {\n            this.navigateId = selected.id;\n        }\n        else {\n            this.navigateId = newSelect.id;\n        }\n    }\n    findFirstRightElement() {\n        let selected = this.marker[this.navigateId];\n        let newSelect = null;\n        this.marker.forEach(element => {\n            if (element != selected && element.lng > selected.lng && (newSelect == null || (element.lng < newSelect.lng || newSelect.lng < selected.lng))) {\n                let angle = this.calcAngle(element.lng - selected.lng, element.lat - selected.lat);\n                if (angle < 45) {\n                    newSelect = element;\n                }\n            }\n        });\n        if (newSelect == null || newSelect.lng <= selected.lng) {\n            this.navigateId = selected.id;\n        }\n        else {\n            this.navigateId = newSelect.id;\n        }\n    }\n    findFirstBottomElement() {\n        let selected = this.marker[this.navigateId];\n        let newSelect = this.marker[this.navigateId == 0 ? 1 : 0];\n        this.marker.forEach(element => {\n            if (element != selected && element.lat < selected.lat && (element.lat > newSelect.lat || newSelect.lat > selected.lat)) {\n                newSelect = element;\n            }\n        });\n        if (newSelect.lat >= selected.lat) {\n            this.navigateId = selected.id;\n        }\n        else {\n            this.navigateId = newSelect.id;\n        }\n    }\n    findFirstTopElement() {\n        let selected = this.marker[this.navigateId];\n        let newSelect = this.marker[this.navigateId == 0 ? 1 : 0];\n        this.marker.forEach(element => {\n            if (element != selected && element.lat > selected.lat && (element.lat < newSelect.lat || newSelect.lat < selected.lat)) {\n                newSelect = element;\n            }\n        });\n        if (newSelect.lat <= selected.lat) {\n            this.navigateId = selected.id;\n        }\n        else {\n            this.navigateId = newSelect.id;\n        }\n    }\n    /*************** set position, move and zoom functions *************/\n    // set new coordinates and handle zoom \n    setPosition() {\n        let coord = this.map.getCenter();\n        this.mapLat = coord.lat;\n        this.mapLng = coord.lng;\n        this.mapZoom = this.map.getZoom();\n        // calcul new move size\n        this.setMoveShift();\n    }\n    // calcul new coordinates\n    moveMap(lat, lng) {\n        this.mapLat += lat * this.moveShift;\n        this.mapLng += lng * this.moveShift;\n        this.map.setView([this.mapLat, this.mapLng], this.mapZoom);\n    }\n    // update zoom\n    zoomMap(zoom) {\n        this.mapZoom += zoom;\n        this.map.setZoom(this.mapZoom);\n    }\n    // alter move padding\n    setMoveShift() {\n        this.moveShift = 80;\n        for (let i = 1; i < this.mapZoom; i++) {\n            this.moveShift /= 2;\n        }\n    }\n    /*************** search input functions *************/\n    // set input focus or blur\n    initInput() {\n        // select search input box\n        this.searchInput = this.elem.nativeElement.querySelector(\".leaflet-control-geocoder-form input\");\n        this.searchBar = this.elem.nativeElement.querySelector(\".leaflet-bar\");\n        this.setFocusOut();\n    }\n    setFocus() {\n        this.searchBar.style.display = \"block\";\n        this.searchInput.focus();\n        this.searchInputFocused = true;\n    }\n    setFocusOut() {\n        this.searchInput.blur();\n        this.searchBar.style.display = \"none\";\n        this.searchInputFocused = false;\n        this.setPosition();\n    }\n}\nMapLibraryComponent.ɵfac = function MapLibraryComponent_Factory(t) { return new (t || MapLibraryComponent)(ɵɵdirectiveInject(ElementRef)); };\nMapLibraryComponent.ɵcmp = ɵɵdefineComponent({ type: MapLibraryComponent, selectors: [[\"map-library\"]], hostBindings: function MapLibraryComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵɵlistener(\"keyup\", function MapLibraryComponent_keyup_HostBindingHandler($event) { return ctx.keyEvent($event); }, false, ɵɵresolveWindow);\n    } }, inputs: { mapLat: \"mapLat\", mapLng: \"mapLng\", mapZoom: \"mapZoom\", search: \"search\", marker: \"marker\", focused: \"focused\" }, outputs: { onchange: \"onchange\", onselect: \"onselect\" }, features: [ɵɵNgOnChangesFeature], decls: 10, vars: 21, consts: [[1, \"map-container\"], [\"id\", \"map\"], [1, \"menu-container\"], [1, \"menu-box\"]], template: function MapLibraryComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵɵelementStart(0, \"div\", 0);\n        ɵɵelement(1, \"i\");\n        ɵɵelement(2, \"div\", 1);\n        ɵɵelementEnd();\n        ɵɵelementStart(3, \"div\", 2);\n        ɵɵelementStart(4, \"div\", 3);\n        ɵɵelement(5, \"i\");\n        ɵɵelement(6, \"i\");\n        ɵɵelement(7, \"i\");\n        ɵɵelement(8, \"i\");\n        ɵɵelement(9, \"i\");\n        ɵɵelementEnd();\n        ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵɵadvance(1);\n        ɵɵclassMapInterpolate1(\"icon \", ctx.handleIcon, \"\");\n        ɵɵadvance(2);\n        ɵɵclassMap(ctx.displayMenu);\n        ɵɵadvance(2);\n        ɵɵclassMapInterpolate1(\"icon search \", ctx.choiseMenu == 0 ? \"selected\" : \"\", \"\");\n        ɵɵadvance(1);\n        ɵɵclassMapInterpolate1(\"icon move \", ctx.choiseMenu == 1 ? \"selected\" : \"\", \"\");\n        ɵɵadvance(1);\n        ɵɵclassMapInterpolate1(\"icon zoom \", ctx.choiseMenu == 2 ? \"selected\" : \"\", \"\");\n        ɵɵadvance(1);\n        ɵɵclassMapInterpolate1(\"icon navigation \", ctx.choiseMenu == 3 ? \"selected\" : \"\", \"\");\n        ɵɵadvance(1);\n        ɵɵclassMapInterpolate1(\"icon logout \", ctx.choiseMenu == 4 ? \"selected\" : \"\", \"\");\n    } }, styles: [\".map-container[_ngcontent-%COMP%]{position:absolute;z-index:1;top:0;left:0;right:0;bottom:0}#map[_ngcontent-%COMP%]{width:100%;height:100%}.map-container[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{position:absolute;z-index:1000;top:10px;right:10px;width:50px;height:50px}.menu-container[_ngcontent-%COMP%]{position:absolute;z-index:1001;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.3);display:none}.menu-box[_ngcontent-%COMP%]{position:absolute;top:calc(50% - 100px);left:calc(50% - 375px);width:750px;height:150px;background-color:#fff;border:1px solid orange!important;text-align:center;margin-top:50px}.menu-box[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{display:inline-block;width:150px;height:150px;border:0;border-radius:3px;background-size:100px 100px;background-repeat:no-repeat;background-position:center}.menu-box[_ngcontent-%COMP%]   .selected[_ngcontent-%COMP%]{background-color:orange}.show-menu[_ngcontent-%COMP%]{display:block}\"] });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MapLibraryComponent, [{\n        type: Component,\n        args: [{\n                selector: \"map-library\",\n                inputs: ['mapLat', 'mapLng', 'mapZoom', 'search', 'marker', 'focused'],\n                templateUrl: \"./map-library.component.html\",\n                styleUrls: [\"./map-library.component.css\",],\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { onchange: [{\n            type: Output\n        }], onselect: [{\n            type: Output\n        }], keyEvent: [{\n            type: HostListener,\n            args: [\"window:keyup\", [\"$event\"]]\n        }] }); })();\n\nclass MapLibraryModule {\n}\nMapLibraryModule.ɵmod = ɵɵdefineNgModule({ type: MapLibraryModule });\nMapLibraryModule.ɵinj = ɵɵdefineInjector({ factory: function MapLibraryModule_Factory(t) { return new (t || MapLibraryModule)(); }, imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(MapLibraryModule, { declarations: [MapLibraryComponent], exports: [MapLibraryComponent] }); })();\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MapLibraryModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MapLibraryComponent],\n                imports: [],\n                exports: [MapLibraryComponent]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of map-library\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CONST, MapLibraryComponent, MapLibraryModule, MapLibraryService };\n//# sourceMappingURL=map-library.js.map\n","import { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\nimport * as cities from '../assets/commune.json';\n\n\ndeclare var EXIF: any;\n\n@Component({\n  selector: 'app-root',\n\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'map-application';\n\n  // component values\n  public mapLat: number = 45;\n  public mapLng: number = 5;\n  public mapZoom: number = 6;\n  public search: String = '';\n  public marker: any = [];\n  public focused: boolean = true;\n\n  private imageTab: any = [];\n  private infobox;\n\n  constructor(private elem: ElementRef) { }\n\n  ngAfterViewInit(): void {\n\n    this.infobox = this.elem.nativeElement.querySelector(\"#infobox\");\n\n    setTimeout(()=>{\n      // get gps metadata and display infos of paris\n      for(let i=1; i<7; i++){\n        this.getExif(\"../assets/\"+i+\".jpg\");\n      }      \n    },200)\n    /*setTimeout(()=>{\n      this.displayInfos({text: \"Paris\", content: \"<span style='color:blue'>12°c</span> - <span style='color:green'>28°c</span>\", img: \"../assets/partly_cloudy.png\", lat: 48.86, lng: 2.34445});\n    },2200)*/\n  }\n\n  /******************************* map component's events *******************/\n  onMapSelect(selected) {\n    console.log(selected);\n    this.displayInfos(selected);\n  }\n  \n  onMapChange(event) {\n    //console.log(event);\n    this.displayCities(event);\n    \n  }\n\n  /******************************* display images and infos *******************/\n  displayInfos(element){\n    this.focused=false;\n    this.infobox.style.display = 'block';\n\n    let images = \"\";\n    this.imageTab.forEach(el => {\n      if(element.lat > el.lat-0.5 && element.lat < el.lat+0.5 && element.lng > el.lng-0.5 && element.lng < el.lng+0.5){\n        images += `\n        <div class=\"imgContainer\">\n          <div>\n            <img src=\"${el.img}\">\n          </div>\n        </div>\n        `;\n      }\n    });\n    \n    this.infobox.innerHTML = ` \n    <div class=\"col wheather\">\n      <h2>${element.text}</h2>\n        <div class=\"wheatherInfo\">\n          <img src=\"${element.img}\"/>\n          <div class=\"content\">${element.content}</div>\n        </div>\n    </div>\n    <div class=\"col thumb\">${images}</div>\n    `;\n  }\n  hideInfos(){\n    this.infobox.style.display = 'none';\n    setTimeout(()=>{ this.focused=true; },10)\n  }\n\n  /******************************* keyboard event *******************/\n  @HostListener(\"window:keyup\", [\"$event\"])\n  keyEvent(event: KeyboardEvent) {\n    if(!this.focused){\n      this.handlingNavigation(event.key);\n    }\n  }\n\n  private handlingNavigation(key): void {\n    console.log(key)\n    switch (key) {\n      case \"ArrowUp\":\n        break;\n      case \"ArrowDown\":\n        break;\n      case \"ArrowRight\":\n        break;\n      case \"ArrowLeft\":\n        break;\n      case \"Enter\":\n        break;\n      case \"Escape\":\n        this.hideInfos();\n        break;\n    }\n  }\n\n  /******************************* display cities weather *******************/\n  displayCities(event){\n\n    let tab=[]\n    cities['cities'].forEach(element => {\n      if(element.zoom <= event.zoom && element.latitude < event.view.top && element.latitude > event.view.bottom && element.longitude < event.view.right && element.longitude > event.view.left){\n        tab.push({ text: element.city, content:\"<span style='color:blue'>12°c</span> - <span style='color:green'>28°c</span>\", img: \"../assets/partly_cloudy.png\", lat: element.latitude, lng: element.longitude })\n      }\n    });\n    this.marker = tab;\n  }\n\n  /******************************* get image gps data *******************/\n  getExif(imgUrl) {\n    var self=this;\n    this.getImageFromImageUrl(imgUrl, (image)=>{    \n      EXIF.getData(image, function(){\n        let imgLat = EXIF.getTag(this,'GPSLatitude')\n        let imgLng = EXIF.getTag(this,'GPSLongitude')\n        // convert from deg/min/sec to decimal for Google\n        var strLatRef = EXIF.getTag(this, \"GPSLatitudeRef\") || \"N\";\n        var strLongRef = EXIF.getTag(this, \"GPSLongitudeRef\") || \"W\";\n        var fLat = (imgLat[0] + imgLat[1]/60 + imgLat[2]/3600) * (strLatRef == \"N\" ? 1 : -1);\n        var fLng = (imgLng[0] + imgLng[1]/60 + imgLng[2]/3600) * (strLongRef == \"W\" ? -1 : 1);\n        // add image to markers\n        //self.addMarker({ img: imgUrl, lat: fLat, lng: fLng });\n        self.imageTab.push({ img: imgUrl, lat: fLat, lng: fLng })\n        console.log(self.imageTab)\n      });\n    });\n  }\n\n  // display image directly\n  addMarker(element){\n    let tab=[]\n    this.marker.forEach(el => { tab.push(el); });\n    tab.push(element)\n    this.marker = tab\n  }\n  \n  getImageFromImageUrl(url, callback) {\n    var img = new Image();\n    img.setAttribute('crossOrigin', 'anonymous');\n    img.onload = function () {\n        callback(img);\n    };\n    img.src = url;\n  }\n\n  toDataURL(url, callback){\n    var xhr = new XMLHttpRequest();\n    xhr.open('get', url);\n    xhr.responseType = 'blob';\n    xhr.onload = function(){\n      var fr = new FileReader();\n      fr.onload = function(){\n        callback(this.result);\n      };\n      fr.readAsDataURL(xhr.response); // async call\n    };\n    xhr.send();\n  }\n\n}\n","<map-library \n    [mapLat]=\"mapLat\" \n    [mapLng]=\"mapLng\" \n    [mapZoom]=\"mapZoom\" \n    [search]=\"search\" \n    [marker]=\"marker\"\n    [focused]=\"focused\"\n    (onchange)=\"onMapChange($event)\"\n    (onselect)=\"onMapSelect($event)\">\n</map-library>\n\n<div id=\"infobox\"></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MapLibraryModule } from 'map-library';\n\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MapLibraryModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  WeatherData:any;\n  weather =[]\n  constructor() { }\n\n  ngOnInit(){\n    this.getWeatherData();\n  }\n  getWeatherData(){\n    fetch('http://api.openweathermap.org/data/2.5/group?id=6452235,6454924,2995469&units=metric&appid=39f7af91a4b080cd1fdef1f8e81062e7')\n    .then(response=>response.json)\n    .then(data=>{this.setWeatherData(data);}) \n    \n  }\n  setWeatherData(data){\n    this.WeatherData = data;\n    for (let item of (this.WeatherData.list)){\n      this.weather.push(item.main.temp);\n    }\n      \n  }\n    \n\n}\n","<p>weather works!</p>\ngi","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}