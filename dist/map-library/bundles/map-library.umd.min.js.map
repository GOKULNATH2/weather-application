{"version":3,"sources":["ng://map-library/lib/map-library.component.ts","ng://map-library/lib/map-library.service.ts","ng://map-library/lib/map-library.component.html","ng://map-library/lib/map-library.module.ts"],"names":["CONST","MapLibraryService","factory","ɵfac","providedIn","MapLibraryComponent","elem","this","mapLat","mapLng","mapZoom","onchange","EventEmitter","onselect","searchInputFocused","moveMode","handleIcon","handleMenuIcon","displayMenu","choiseMenu","navigate","navigateId","mapMarkers","prototype","ngAfterViewInit","_this","initMap","initInput","setMoveShift","setSearch","search","setMarker","marker","setTimeout","sendModifications","map","L.map","attributionControl","zoomControl","center","zoom","L.tileLayer","addTo","keyboard","disable","geocoder","L.Control","position","collapsed","placeholder","defaultMarkGeocode","setQuery","_geocode","_results","length","_geocodeResultSelected","_clearResults","cleanMarkers","i","forEach","element","id","text","img","generateImageMarker","generateIconMarker","L.marker","lat","lng","nativeElement","querySelector","style","background","removeLayer","html","content","L.Marker","icon","L.DivIcon","className","iconSize","iconAnchor","ngOnChanges","changes","Object","keys","setView","keyEvent","event","focused","handlingMenu","key","handlingNavigation","handlingMap","navigateMarker","sendSelectEvent","openMenu","setFocus","setFocusOut","setNavigationMode","alert","closeMenu","getCenter","LAT_MAX","moveMap","ZOOM_MAX","zoomMap","moveShift","ZOOM_MIN","changeMode","mapSize","getSize","centerPixel","project","topLeft","unproject","x","y","bottomRight","emit","view","top","left","bottom","right","selected","selectMenu","findFirstRightElement","findFirstLeftElement","findFirstTopElement","findFirstBottomElement","el","calcAngle","adjacent","opposite","Math","atan","abs","PI","calcHyp","sqrt","pow","newSelect","setPosition","coord","getZoom","setZoom","searchInput","searchBar","display","focus","blur","core","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","rf","ctx","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵclassMapInterpolate1","i0.ɵɵclassMap","MapLibraryModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  HostListener,\n  ElementRef,\n  Output,\n  EventEmitter,\n  SimpleChanges\n} from \"@angular/core\";\nimport * as L from \"leaflet\";\nimport \"leaflet-control-geocoder\";\n\nexport enum CONST {\n  ZOOM_MAX = 18,\n  ZOOM_MIN = 2,\n  LAT_MAX = 85,\n}\n\n@Component({\n  selector: \"map-library\",\n  inputs: ['mapLat', 'mapLng', 'mapZoom', 'search', 'marker','focused'],\n  templateUrl: \"./map-library.component.html\",\n  styleUrls: [\"./map-library.component.css\",],\n})\n\nexport class MapLibraryComponent implements AfterViewInit {\n\n  // input values\n  public mapLat: number = 45;\n  public mapLng: number = 5;\n  public mapZoom: number = 5;\n  public search: String;\n  public marker: any;\n  public focused: boolean;\n\n  @Output() onchange = new EventEmitter<any>();\n  @Output() onselect = new EventEmitter<any>();\n\n  private map;\n  private geocoder;\n  private searchInput;\n  private searchBar;\n  private searchInputFocused = false;\n  private moveMode = true;\n  private moveShift;\n  public handleIcon = \"move\";\n  public handleMenuIcon = \"zoom\";\n  public displayMenu = \"\";\n  public choiseMenu = 1;\n  private navigate = false;\n  private navigateId = 0;\n\n  constructor(private elem: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    // init map\n    this.initMap();\n    this.initInput();\n    this.setMoveShift();\n\n    // init display input request\n    this.setSearch(this.search);\n    this.setMarker(this.marker);\n    // send init event\n    setTimeout(() => {\n      this.sendModifications(\"\");\n    }, 2000)\n  }\n\n  private initMap(): void {\n    // init map\n    this.map = L.map(\"map\", {\n      attributionControl: false,\n      zoomControl: false,\n      center: [this.mapLat, this.mapLng],\n      zoom: this.mapZoom,\n    });\n    // display map\n    L.tileLayer(\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\").addTo(this.map);\n    // disable keyboard\n    this.map.keyboard.disable();\n    // add search box\n    this.geocoder = L.Control.geocoder({\n      position: \"topleft\",\n      collapsed: false,\n      placeholder: \"Recherche...\",\n      defaultMarkGeocode: true,\n    }).addTo(this.map);\n  }\n\n  private setSearch(search): void {\n    if (this.search) {\n      // load searching\n      this.geocoder.setQuery(search)._geocode()\n      // search the first element\n      setTimeout(() => {\n        if (this.geocoder._results && this.geocoder._results.length) {\n          this.geocoder._geocodeResultSelected(this.geocoder._results[0])\n          this.geocoder._clearResults();\n        }\n      }, 2000);\n    }\n  }\n\n  // display markers\n  private mapMarkers = [];\n  private setMarker(marker): void {\n\n    this.cleanMarkers();\n    let i = 0;\n    marker.forEach(element => {\n      if (\"lat\" in element && \"lng\" in element) {\n        element.id = i;\n        if (!element.text && element.img) {\n          this.mapMarkers[i] = this.generateImageMarker(element)\n        } else if (!element.text) {\n          this.mapMarkers[i] = L.marker([element.lat, element.lng])\n        } else {\n          this.mapMarkers[i] = this.generateIconMarker(element)\n        }\n        this.mapMarkers[i].addTo(this.map);\n\n        if (this.navigate && this.mapLat == element.lat && this.mapLng == element.lng) {\n          this.navigateId = i\n          this.elem.nativeElement.querySelector(\"#marker_\" + this.navigateId).style.background = \"orange\";\n        }\n        i++;\n      }\n    });\n  }\n\n  // remove all markers to display news\n  private cleanMarkers() {\n    for (let i = 0; i < this.mapMarkers.length; i++) {\n      this.map.removeLayer(this.mapMarkers[i]);\n    }\n  }\n\n  // generate Marker\n  private generateIconMarker(element) {\n\n    // set html form\n    let html = `\n      <div class=\"marker\" id=\"marker_${element.id}\">\n        <div>${element.text}</div>\n        `+ (element.content ? `<span>${element.content}</span>` : ``) +\n        (element.img ? `<img src=\"${element.img}\"/>` : ``) + `\n      </div>`\n\n    // return leaflet marker\n    return new L.Marker([element.lat, element.lng], {\n      icon: new L.DivIcon({\n        className: '',\n        iconSize: [100, 70], // size of the icon\n        iconAnchor: [60, element.img ? 40 : 10],\n        html,\n      })\n    })\n  }\n\n  // generate image Marker\n  private generateImageMarker(element) {\n\n    // set html form\n    let html = `<img id=\"marker_${element.id}\" style=\"width:80px;\" src=\"${element.img}\"/>`\n\n    // return leaflet marker\n    return new L.Marker([element.lat, element.lng], {\n      icon: new L.DivIcon({\n        className: '',\n        iconSize: [80, 70], // size of the icon\n        iconAnchor: [45, element.img ? 40 : 10],\n        html,\n      })\n    })\n  }\n\n  /*************** components attributes events *************/\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.map) {\n      switch (Object.keys(changes)[0]) {\n        case \"mapZoom\":\n        case \"mapLat\":\n        case \"mapLng\":\n          this.map.setView([this.mapLat, this.mapLng], this.mapZoom);\n          this.setMoveShift();\n          break;\n        case \"marker\":\n          this.setMarker(this.marker);\n          break;\n        case \"search\":\n          this.setSearch(this.search);\n          break;\n      }\n    }\n  }\n\n  /*************** keyboard event detect and functions *************/\n\n\n\n  @HostListener(\"window:keyup\", [\"$event\"])\n  keyEvent(event: KeyboardEvent) {\n    if(this.focused){\n      if (this.displayMenu != \"\") {\n        this.handlingMenu(event.key);\n\n      } else if (this.navigate) {\n        this.handlingNavigation(event.key)\n\n      } else {\n        this.handlingMap(event.key)\n        // send change to parent application\n        this.sendModifications(event.key);\n      }\n    }\n  }\n\n  private handlingNavigation(key): void {\n    switch (key) {\n      case \"ArrowUp\":\n        this.navigateMarker(1, 0)\n        break;\n      case \"ArrowDown\":\n        this.navigateMarker(-1, 0)\n        break;\n      case \"ArrowRight\":\n        this.navigateMarker(0, 1)\n        break;\n      case \"ArrowLeft\":\n        this.navigateMarker(0, -1)\n        break;\n      case \"Enter\":\n        // send change to parent application\n        if (this.marker[this.navigateId])\n          this.sendSelectEvent(this.marker[this.navigateId])\n        break;\n      case \"Escape\":\n        this.openMenu();\n        break;\n    }\n  }\n\n  private handlingMenu(key): void {\n    switch (key) {\n      case \"ArrowRight\":\n        this.choiseMenu++;\n        if (this.choiseMenu > 4) {\n          this.choiseMenu = 0;\n        }\n        break;\n      case \"ArrowLeft\":\n        this.choiseMenu--;\n        if (this.choiseMenu < 0) {\n          this.choiseMenu = 4;\n        }\n        break;\n      case \"Enter\":\n        // reset navigation mode\n        this.navigate = false;\n\n        if (this.choiseMenu == 0) {\n          this.setFocus()\n        } else {\n          this.setFocusOut();\n        }\n        if (this.choiseMenu == 1) {\n          this.handleIcon = \"move\";\n          this.moveMode = true\n\n        } else if (this.choiseMenu == 2) {\n          this.handleIcon = \"zoom\";\n          this.moveMode = false\n\n        } else if (this.choiseMenu == 3) {\n          this.setNavigationMode()\n\n        } else if (this.choiseMenu == 4) {\n          alert(\"exit\")\n        }\n        this.closeMenu()\n        break;\n      case \"Escape\":\n        this.closeMenu();\n        break;\n    }\n  }\n\n  private handlingMap(key): void {\n    switch (key) {\n      case \"ArrowUp\":\n        if (this.moveMode) {\n          if (this.map.getCenter().lat < CONST.LAT_MAX) {\n            this.moveMap(1, 0);\n          }\n        } else {\n          if (this.mapZoom < CONST.ZOOM_MAX) {\n            this.zoomMap(1);\n            this.moveShift /= 2;\n          }\n        }\n        break;\n      case \"ArrowDown\":\n        if (this.moveMode) {\n          if (this.map.getCenter().lat > -CONST.LAT_MAX) {\n            this.moveMap(-1, 0);\n          }\n        } else {\n          if (this.mapZoom > CONST.ZOOM_MIN) {\n            this.zoomMap(-1);\n            this.moveShift *= 2;\n          }\n        }\n        break;\n      case \"ArrowRight\":\n        if (this.moveMode) {\n          this.moveMap(0, 1);\n        } else {\n        }\n        break;\n      case \"ArrowLeft\":\n        if (this.moveMode) {\n          this.moveMap(0, -1);\n        } else {\n        }\n        break;\n      case \"Enter\":\n        this.changeMode()\n        break;\n      case \"Escape\":\n        this.openMenu();\n        break;\n    }\n  }\n\n  // display move or zoom icon when press\n  private changeMode(): void {\n    this.moveMode = !this.moveMode;\n    if (this.moveMode) {\n      this.handleIcon = \"move\";\n      this.choiseMenu = 1;\n    } else {\n      this.handleIcon = \"zoom\";\n      this.choiseMenu = 2;\n    }\n  }\n\n  private sendModifications(key) {\n    // calcul map outline by container size and pixel progection\n    let mapSize = this.map.getSize();\n    let centerPixel = this.map.project([this.mapLat, this.mapLng], this.mapZoom)\n    let topLeft = this.map.unproject([centerPixel.x - mapSize.x / 2, centerPixel.y - mapSize.y / 2], this.mapZoom)\n    let bottomRight = this.map.unproject([centerPixel.x + mapSize.x / 2, centerPixel.y + mapSize.y / 2], this.mapZoom)\n\n    // send coordinates results\n    this.onchange.emit(\n      {\n        key: key,\n        zoom: this.mapZoom,\n        lat: this.mapLat,\n        lng: this.mapLng,\n        view: {\n          top: topLeft.lat,\n          left: topLeft.lng,\n          bottom: bottomRight.lat,\n          right: bottomRight.lng\n        }\n      })\n  }\n\n  private sendSelectEvent(selected) {\n    this.onselect.emit(selected)\n  }\n\n  /*************** escape app functions *************/\n\n  private openMenu(): void {\n    this.displayMenu = \"show-menu\";\n  }\n\n  private closeMenu(): void {\n    this.displayMenu = \"\";\n  }\n  // show escape message\n  private selectMenu(key): void {\n    if (key == \"Escape\") {\n      this.closeMenu()\n    } else {\n      //this.validEscape = false;\n    }\n  }\n\n  /*************** navigate between markers *************/\n\n  private setNavigationMode(): void {\n    this.navigate = true;\n    this.handleIcon = \"navigation\";\n    this.navigateMarker(0, 0)\n    // define menu to move\n    this.moveMode = false\n    this.handleMenuIcon = \"move\"\n  }\n\n  private navigateMarker(lat, lng): void {\n    if (!this.marker.length) {\n      return;\n    }\n    if (this.marker.length == 1) {\n      this.navigateId = 0;\n      this.elem.nativeElement.querySelector(\"#marker_\" + this.navigateId).style.background = \"orange\";\n      return;\n    }\n    if (this.navigateId > this.marker.length) {\n      this.navigateId = 0;\n    }\n    if (lat != 0 || lng != 0) {\n      // reset previous\n      this.elem.nativeElement.querySelector(\"#marker_\" + this.marker[this.navigateId].id).style.background = \"white\";\n    }\n    // display new\n    if (lng > 0) {\n      this.findFirstRightElement();\n    } else if (lng < 0) {\n      this.findFirstLeftElement();\n    } else if (lat > 0) {\n      this.findFirstTopElement();\n    } else if (lat < 0) {\n      this.findFirstBottomElement();\n    } else {\n      this.navigateId = 0\n    }\n    let el = this.marker[this.navigateId];\n    this.mapLat = el.lat\n    this.mapLng = el.lng\n    this.moveMap(0, 0)\n    this.sendModifications(\"\")\n  }\n\n  private calcAngle(adjacent, opposite) {\n    return Math.atan(Math.abs(opposite)/Math.abs(adjacent)) * (180/Math.PI);\n  }\n  private calcHyp(adjacent, opposite) {\n    return Math.sqrt(Math.pow(adjacent, 2) + Math.pow(opposite, 2));;\n  }\n\n  private findFirstLeftElement() {\n    let selected = this.marker[this.navigateId];\n    let newSelect = null;\n    this.marker.forEach(element => {\n      if (element != selected && element.lng < selected.lng && (newSelect==null || (element.lng > newSelect.lng || newSelect.lng > selected.lng))) {\n        let angle=this.calcAngle(element.lng - selected.lng, element.lat - selected.lat);\n        //console.log(element.text+\" \"+angle)\n        if(angle<45){\n          newSelect = element;\n        }\n      }\n    });\n    if (newSelect==null || newSelect.lng >= selected.lng) {\n      this.navigateId = selected.id;\n    } else {\n      this.navigateId = newSelect.id\n    }\n  }\n  \n  private findFirstRightElement() {\n    let selected = this.marker[this.navigateId];\n    let newSelect = null\n    this.marker.forEach(element => {\n      if (element != selected && element.lng > selected.lng && (newSelect==null || (element.lng < newSelect.lng || newSelect.lng < selected.lng))) {\n        let angle=this.calcAngle(element.lng - selected.lng, element.lat - selected.lat);\n        if(angle<45){\n          newSelect = element;\n        }\n      }\n    });\n    if (newSelect==null || newSelect.lng <= selected.lng) {\n      this.navigateId = selected.id;\n    } else {\n      this.navigateId = newSelect.id\n    }\n  }\n\n  private findFirstBottomElement() {\n    let selected = this.marker[this.navigateId];\n    let newSelect = this.marker[this.navigateId == 0 ? 1 : 0];\n    this.marker.forEach(element => {\n      if (element != selected && element.lat < selected.lat && (element.lat > newSelect.lat || newSelect.lat > selected.lat)) {\n          newSelect = element;\n      }\n    });\n    if (newSelect.lat >= selected.lat) {\n      this.navigateId = selected.id;\n    } else {\n      this.navigateId = newSelect.id\n    }\n  }\n\n  private findFirstTopElement() {\n    let selected = this.marker[this.navigateId];\n    let newSelect = this.marker[this.navigateId == 0 ? 1 : 0];\n    this.marker.forEach(element => {\n      if (element != selected && element.lat > selected.lat && (element.lat < newSelect.lat || newSelect.lat < selected.lat)) {\n          newSelect = element;\n      }\n    });\n    if (newSelect.lat <= selected.lat) {\n      this.navigateId = selected.id;\n    } else {\n      this.navigateId = newSelect.id\n    }\n  }\n\n  /*************** set position, move and zoom functions *************/\n\n  // set new coordinates and handle zoom \n  private setPosition(): void {\n    let coord = this.map.getCenter();\n    this.mapLat = coord.lat;\n    this.mapLng = coord.lng;\n    this.mapZoom = this.map.getZoom();\n    // calcul new move size\n    this.setMoveShift();\n  }\n\n  // calcul new coordinates\n  private moveMap(lat, lng): void {\n    this.mapLat += lat * this.moveShift;\n    this.mapLng += lng * this.moveShift;\n    this.map.setView([this.mapLat, this.mapLng], this.mapZoom);\n  }\n\n  // update zoom\n  private zoomMap(zoom): void {\n    this.mapZoom += zoom;\n    this.map.setZoom(this.mapZoom);\n  }\n\n  // alter move padding\n  setMoveShift() {\n    this.moveShift = 80;\n    for (let i = 1; i < this.mapZoom; i++) {\n      this.moveShift /= 2;\n    }\n  }\n\n  /*************** search input functions *************/\n\n  // set input focus or blur\n  initInput() {\n    // select search input box\n    this.searchInput = this.elem.nativeElement.querySelector(\n      \".leaflet-control-geocoder-form input\"\n    );\n    this.searchBar = this.elem.nativeElement.querySelector(\n      \".leaflet-bar\"\n    );\n    this.setFocusOut();\n  }\n  setFocus() {\n\n    this.searchBar.style.display = \"block\";\n    this.searchInput.focus();\n    this.searchInputFocused = true;\n  }\n  setFocusOut() {\n    this.searchInput.blur();\n    this.searchBar.style.display = \"none\";\n    this.searchInputFocused = false;\n\n    this.setPosition();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapLibraryService {\n\n  constructor() { }\n}\n","<div class=\"map-container\">\n    <i class=\"icon {{handleIcon}}\"></i>\n    <div id=\"map\"></div>\n</div>\n<div class=\"menu-container\" class=\"{{displayMenu}}\">\n    <div class=\"menu-box\">\n        <i class=\"icon search {{(choiseMenu==0?'selected':'')}}\"></i>\n        <i class=\"icon move {{(choiseMenu==1?'selected':'')}}\"></i>\n        <i class=\"icon zoom {{(choiseMenu==2?'selected':'')}}\"></i>\n        <i class=\"icon navigation {{(choiseMenu==3?'selected':'')}}\"></i>\n        <i class=\"icon logout {{(choiseMenu==4?'selected':'')}}\"></i>\n    </div>  \n</div>","import { NgModule } from '@angular/core';\nimport { MapLibraryComponent } from './map-library.component';\n\n\n\n@NgModule({\n  declarations: [MapLibraryComponent],\n  imports: [\n  ],\n  exports: [MapLibraryComponent]\n})\nexport class MapLibraryModule { }\n"]}